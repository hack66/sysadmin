---

- name: Ensure paths exist
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ caddy_path }}"
    - "{{ caddy_certs }}"

- name: Template files
  template:
    src: "{{ item }}.j2"
    dest: "{{ caddy_path }}/{{ item }}"
  with_items:
    - Caddyfile
    - Dockerfile
  register: template_files

- name: Create docker www network name
  docker_network:
    name: "{{ docker_www_net }}"

- name: Create Docker image of "{{ dokuwiki_host }}"
  docker_image:
    source: build
    force_source: "{{ template_files.changed }}"
    name: "{{ docker_image_name }}"
    build:
      pull: yes
      path: "{{ caddy_path }}"
      nocache: "{{ template_files.changed }}"

- name: Bring up Docker container(s) of "{{ dokuwiki_host }}"
  docker_compose:
    project_name: "{{ dokuwiki_host }}"
    definition:
      version: '2'
      services:
        www:
          container_name: "{{ caddy_ct_name }}"
          image: "{{ docker_image_name }}"
          ports:
            - "80:80/tcp"
            - "443:443/tcp"
          volumes:
            - "{{ caddy_config }}:{{ caddy_docker_config }}"
            - "{{ caddy_certs }}:{{ caddy_docker_certs }}"
            - "{{ dokuwiki_root }}:{{ dokuwiki_docker_root }}"
          restart: unless-stopped
  register: docker_output

- name: Add Caddy container to www network
  docker_network:
    name: "{{ docker_www_net }}"
    connected:
      - "{{ caddy_ct_name }}"
    appends: yes

- debug:
    var: docker_output

# XXX TODO fix assertion
#- name: Check if Docker container(s) of "{{ dokuwiki_host }}" is running
#  assert:
#    that:
#      - "www.state.running"

- name: Connect to hosts and get an HTTP 200
  uri:
    url: "{{ item }}"
    validate_certs: "{{ le_staging|default(false)|ternary('no', 'yes') }}"
  with_items:
    - "https://{{ dokuwiki_host }}"
    - "https://www.{{ dokuwiki_host }}"
